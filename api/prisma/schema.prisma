generator kysely {
  provider     = "prisma-kysely"
  output       = "../src/db"
  fileName     = "types.ts"
  enumFileName = "enums.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  board     Board?

  @@map("users")
}

model Board {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    String   @unique @map("user_id") @db.Uuid
  uid       String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id])
  posts     Post[]
  uploads   Upload[]

  @@map("boards")
}

model Upload {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  boardId   String   @map("board_id") @db.Uuid
  name      String
  path      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  post      Post?
  board     Board    @relation(fields: [boardId], references: [id])

  @@map("uploads")
}

model Post {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  boardId   String   @map("board_id") @db.Uuid
  uploadId  String   @unique @map("upload_id") @db.Uuid
  title     String
  summary   String
  content   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  board     Board    @relation(fields: [boardId], references: [id])
  upload    Upload   @relation(fields: [uploadId], references: [id])

  @@map("posts")
}
